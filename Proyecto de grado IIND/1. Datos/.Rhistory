boxcox(pm25 ~ 1, data = data, lambda = seq(-2, 2, by = 0.1))
data$pm25_transformed <- bcPower(data$pm25, lambda = 0.4)
# Transformar la variable pm25 a una distribución Normal
boxcox(pm25 ~ 1, data = data, lambda = seq(-2, 2, by = 0.1))
data$pm25_transformed <- bcPower(data$pm25, lambda = 0.4)
# vector variable pm25
ln_pm25 <- data$pm25_transformed
fit.cont(ln_pm25)
View(data)
ggplot(data, aes(x = tmp)) +
geom_histogram(binwidth = 5, fill = "blue", color = "black") +
labs(title = "Histograma de tmp",
x = "Temperatura en C") +
# Un tema minimalista
theme_minimal() +
# Alineación del título
theme(plot.title = element_text(hjust = 0.5))
# vector variable pm2021
pm25 <- data$pm25
# vector variable pm2021
tmp <- data$tmp
ajusteR <- fitdist(tmp, "gamma")
resultadoR<- gofstat(ajusteR)
resultadoR$chisqpvalue
ajusteR <- fitdist(tmp, "exp")
resultadoR<- gofstat(ajusteR)
resultadoR$chisqpvalue
plot(ajusteR)
fit.cont(pm25)
ajusteR <- fitdist(tmp, "gamma")
resultadoR<- gofstat(ajusteR)
resultadoR$chisqpvalue
plot(ajusteR)
fit.cont(pm25)
# Transformar la variable tmp a una distribución normal
Datos1$ln_tmp <- log(data$tmp)
# Transformar la variable tmp a una distribución normal
data$ln_tmp <- log(data$tmp)
ajusteR <- fitdist(tmp, "gamma")
resultadoR<- gofstat(ajusteR)
resultadoR$chisqpvalue
# vector variable pm2021
tmp <- data$tmp
ajusteR <- fitdist(tmp, "gamma")
resultadoR<- gofstat(ajusteR)
resultadoR$chisqpvalue
plot(ajusteR)
fit.cont(tmp)
ajusteR <- fitdist(tmp, "logistic")
ajusteR <- fitdist(tmp, "gamma")
resultadoR<- gofstat(ajusteR)
resultadoR$chisqpvalue
plot(ajusteR)
fit.cont(tmp)
# Transformar la variable tmp a una distribución normal
data$ln_tmp <- log(data$tmp)
# vector variable pm2021
ln_tmp <- data$ln_tmp
fit.cont(ln_tmp)
View(data)
ggplot(data, aes(x = radsolar)) +
geom_histogram(binwidth = 5, fill = "blue", color = "black") +
labs(title = "Histograma de radsolar",
x = "radsolar en (W/M²)") +
# Un tema minimalista
theme_minimal() +
# Alineación del título
theme(plot.title = element_text(hjust = 0.5))
# vector variable pm2021
radsolar <- data$radsolar
ajusteR <- fitdist(tmp, "gamma")
resultadoR<- gofstat(ajusteR)
resultadoR$chisqpvalue
plot(ajusteR)
ajusteR <- fitdist(radsolar, "gamma")
resultadoR<- gofstat(ajusteR)
resultadoR$chisqpvalue
plot(ajusteR)
fit.cont(radsolar)
View(data)
ggplot(data, aes(x = pressure)) +
geom_histogram(binwidth = 5, fill = "blue", color = "black") +
labs(title = "Histograma de pressure",
x = "Presión barométrica en (mmHg)") +
# Un tema minimalista
theme_minimal() +
# Alineación del título
theme(plot.title = element_text(hjust = 0.5))
# vector variable pm2021
pressure <- data$pressure
ajusteR <- fitdist(pressure, "gamma")
resultadoR<- gofstat(ajusteR)
resultadoR$chisqpvalue
plot(ajusteR)
fit.cont(pressure)
hist(pressure)
ggplot(data, aes(x = pressure)) +
geom_histogram(binwidth = 5, fill = "blue", color = "black") +
labs(title = "Histograma de pressure",
x = "Presión barométrica en (mmHg)") +
# Un tema minimalista
theme_minimal() +
# Alineación del título
theme(plot.title = element_text(hjust = 0.5))
# vector variable pm2021
pressure <- data$pressure
hist(pressure)
ajusteR <- fitdist(pressure, "gamma")
hist(pressure)
ajusteR <- fitdist(pressure, "norm")
resultadoR<- gofstat(ajusteR)
resultadoR$chisqpvalue
plot(ajusteR)
fit.cont(pressure)
ggplot(data, aes(x = ws)) +
geom_histogram(binwidth = 5, fill = "blue", color = "black") +
labs(title = "Histograma de ws",
x = "Velocidad del viento en (m/s)") +
# Un tema minimalista
theme_minimal() +
# Alineación del título
theme(plot.title = element_text(hjust = 0.5))
ggplot(data, aes(x = radsolar)) +
geom_histogram(binwidth = 5, fill = "blue", color = "black") +
labs(title = "Histograma de radsolar",
x = "radsolar en (W/M²)") +
# Un tema minimalista
theme_minimal() +
# Alineación del título
theme(plot.title = element_text(hjust = 0.5))
# vector variable pm2021
pressure <- data$pressure
# vector variable pm2021
ws <- data$ws
# vector variable pm2021
ws <- data$ws
hist(ws)
ajusteR <- fitdist(ws, "norm")
resultadoR<- gofstat(ajusteR)
resultadoR$chisqpvalue
plot(ajusteR)
fit.cont(ws)
# Limpiar el entorno
rm(list = ls())
## Librerias ------------------
library(pacman)
library(tidyverse) # Paquete grande de manipulacion
library(lubridate) # Paquete para manejo de fechas
library(skimr)     # Paquete para revision de datos
library(stargazer) # Paquete de tablas "bonitas", regs y estad desc
library(dplyr)     # Paquete parte de tidyverse donde esta mutate, select, filter, summarise...
library(rio)       # Paquete de importacion/exportacion de datos
library(gridExtra)
library(patchwork)
library(stats)
library(readxl)
library(writexl)
library(ggplot2)
library(officer)
library(flextable)
library(pscl)
library(corrplot)   # Para el gráfico de correlación
library(forecast)
library(tseries)
library(devtools)
library(fpp3)
library(urca)
library(vars)
library(MTS)
library(tseries) # Importamos la librería de tserires para la aplicación de la prueba de Dickey Fuller.
library(lmtest)
library(MASS)
library(survival)
library(fitdistrplus)
library(rriskDistributions)
library(car)
# Manejo del directorio
getwd()
directorio <- "C:/Users/windows/Documents/GitHub/Problem_Set_1/Proyecto-de-grado-IIND/Proyecto de grado IIND/1. Datos"
setwd(directorio)
# Chequeo de los archivos del directorio
dir()
list.files()
## Importacion de los datos ------------------
install_formats() # Cuestiones de importacion de archivos del paquete rio
data <- import("6. Bogota_Promedio_Dias_Act_VAR_1.xlsx")
# Histograma de PM2.5
ggplot(data, aes(x = pm25)) +
geom_histogram(binwidth = 5, fill = "blue", color = "black") +
labs(title = "Histograma de PM2.5",
x = "Concentración de PM2.5 (μg/m3)") +
# Un tema minimalista
theme_minimal() +
# Alineación del título
theme(plot.title = element_text(hjust = 0.5))
# vector variable pm2021
pm25 <- data$pm25
ajusteR <- fitdist(pm25, "gamma")
resultadoR<- gofstat(ajusteR)
resultadoR$chisqpvalue
plot(ajusteR)
fit.cont(pm25)
# Transformar la variable pm25 a una distribución Normal
boxcox(pm25 ~ 1, data = data, lambda = seq(-2, 2, by = 0.1))
data$pm25_norm <- bcPower(data$pm25, lambda = 0.4)
# vector variable pm25
pm25_norm <- data$pm25_norm
fit.cont(pm25_norm)
# Transformar la variable pm25 a una distribución Normal
boxcox(pm25 ~ 1, data = data, lambda = seq(-2, 2, by = 0.1))
data$pm25_norm <- bcPower(data$pm25, lambda = 0.3)
# vector variable pm25
pm25_norm <- data$pm25_norm
fit.cont(pm25_norm)
shapiro.test(ws)
shapiro.test(data$ws)
shapiro.test(data$pm25_norm)
# Exprtar data
write_xlsx(data, "C:/Users/windows/Documents/GitHub/Problem_Set_1/Proyecto-de-grado-IIND/Proyecto de grado IIND/1. Datos/5. 6. Bogota_Promedio_Dias_Act_VECM.xlsx. Bogota_Promedio_Dias.xlsx")
# Exprtar data
write_xlsx(data, "C:/Users/windows/Documents/GitHub/Problem_Set_1/Proyecto-de-grado-IIND/Proyecto de grado IIND/1. Datos/7. Bogota_Promedio_Dias_Act_VECM.xlsx. Bogota_Promedio_Dias.xlsx")
# Limpiar el entorno
rm(list = ls())
## Librerias ------------------
library(pacman)
library(tidyverse) # Paquete grande de manipulacion
library(lubridate) # Paquete para manejo de fechas
library(skimr)     # Paquete para revision de datos
library(stargazer) # Paquete de tablas "bonitas", regs y estad desc
library(dplyr)     # Paquete parte de tidyverse donde esta mutate, select, filter, summarise...
library(rio)       # Paquete de importacion/exportacion de datos
library(gridExtra)
library(patchwork)
library(stats)
library(readxl)
library(writexl)
library(ggplot2)
library(officer)
library(flextable)
library(pscl)
library(corrplot)   # Para el gráfico de correlación
library(forecast)
library(tseries)
library(devtools)
library(fpp3)
library(urca)
library(vars)
library(MTS)
library(tseries) # Importamos la librería de tserires para la aplicación de la prueba de Dickey Fuller.
library(lmtest)
library(MASS)
library(survival)
library(fitdistrplus)
library(rriskDistributions)
library(car)
# Manejo del directorio
getwd()
directorio <- "C:/Users/windows/Documents/GitHub/Problem_Set_1/Proyecto-de-grado-IIND/Proyecto de grado IIND/1. Datos"
setwd(directorio)
# Chequeo de los archivos del directorio
dir()
list.files()
## Importacion de los datos ------------------
install_formats() # Cuestiones de importacion de archivos del paquete rio
data <- import("6. Bogota_Promedio_Dias_Act_VAR_1.xlsx")
# Histograma de PM2.5
ggplot(data, aes(x = pm25)) +
geom_histogram(binwidth = 5, fill = "blue", color = "black") +
labs(title = "Histograma de PM2.5",
x = "Concentración de PM2.5 (μg/m3)") +
# Un tema minimalista
theme_minimal() +
# Alineación del título
theme(plot.title = element_text(hjust = 0.5))
# vector variable pm2021
pm25 <- data$pm25
ajusteR <- fitdist(pm25, "gamma")
resultadoR<- gofstat(ajusteR)
resultadoR$chisqpvalue
plot(ajusteR)
fit.cont(pm25)
# Transformar la variable pm25 a una distribución Normal
boxcox(pm25 ~ 1, data = data, lambda = seq(-2, 2, by = 0.1))
data$pm25_norm <- bcPower(data$pm25, lambda = 0.3)
# vector variable pm25
pm25_norm <- data$pm25_norm
fit.cont(pm25_norm)
ggplot(data, aes(x = tmp)) +
geom_histogram(binwidth = 5, fill = "blue", color = "black") +
labs(title = "Histograma de tmp",
x = "Temperatura en grados Celsius") +
# Un tema minimalista
theme_minimal() +
# Alineación del título
theme(plot.title = element_text(hjust = 0.5))
# vector variable pm2021
tmp <- data$tmp
ajusteR <- fitdist(tmp, "gamma")
resultadoR<- gofstat(ajusteR)
resultadoR$chisqpvalue
plot(ajusteR)
fit.cont(tmp)
ggplot(data, aes(x = tmp)) +
geom_histogram(binwidth = 5, fill = "blue", color = "black") +
labs(title = "Histograma de tmp",
x = "Temperatura en grados Celsius") +
# Un tema minimalista
theme_minimal() +
# Alineación del título
theme(plot.title = element_text(hjust = 0.5))
# vector variable pm2021
tmp <- data$tmp
ajusteR <- fitdist(tmp, "gamma")
resultadoR<- gofstat(ajusteR)
resultadoR$chisqpvalue
plot(ajusteR)
fit.cont(tmp)
# Transformar la variable tmp a una distribución normal
data$ln_tmp <- log(data$tmp)
# vector variable tmp
ln_tmp <- data$ln_tmp
fit.cont(ln_tmp)
ggplot(data, aes(x = radsolar)) +
geom_histogram(binwidth = 5, fill = "blue", color = "black") +
labs(title = "Histograma de radsolar",
x = "radsolar en (W/M²)") +
# Un tema minimalista
theme_minimal() +
# Alineación del título
theme(plot.title = element_text(hjust = 0.5))
# vector variable pm2021
radsolar <- data$radsolar
ajusteR <- fitdist(radsolar, "norm")
resultadoR<- gofstat(ajusteR)
resultadoR$chisqpvalue
plot(ajusteR)
fit.cont(radsolar)
fit.cont(radsolar)
# vector variable pm2021
pressure <- data$pressure
hist(pressure)
ajusteR <- fitdist(pressure, "norm")
resultadoR<- gofstat(ajusteR)
resultadoR$chisqpvalue
plot(ajusteR)
fit.cont(pressure)
pressure <- data$pressure
hist(pressure)
ajusteR <- fitdist(pressure, "norm")
resultadoR<- gofstat(ajusteR)
resultadoR$chisqpvalue
plot(ajusteR)
fit.cont(pressure)
# vector variable pm2021
ws <- data$ws
hist(ws)
ajusteR <- fitdist(ws, "norm")
resultadoR<- gofstat(ajusteR)
resultadoR$chisqpvalue
plot(ajusteR)
fit.cont(ws)
# Transformar la variable tmp a una distribución normal
data$ln_ws <- log(data$ws)
# vector variable tmp
ln_ws <- data$ln_ws
fit.cont(ln_ws)
# -----------------------------------------------------------
# Sección 1: Preparación de datos
# -----------------------------------------------------------
# Limpiar el entorno
rm(list = ls())
## Librerias ------------------
library(pacman)
library(tidyverse) # Paquete grande de manipulacion
library(lubridate) # Paquete para manejo de fechas
library(skimr)     # Paquete para revision de datos
library(stargazer) # Paquete de tablas "bonitas", regs y estad desc
library(dplyr)     # Paquete parte de tidyverse donde esta mutate, select, filter, summarise...
library(rio)       # Paquete de importacion/exportacion de datos
library(gridExtra)
library(patchwork)
library(stats)
library(readxl)
library(writexl)
library(ggplot2)
library(officer)
library(flextable)
library(pscl)
library(corrplot)   # Para el gráfico de correlación
library(forecast)
library(tseries)
library(devtools)
library(fpp3)
library(urca)
library(vars)
library(MTS)
library(tseries) # Importamos la librería de tserires para la aplicación de la prueba de Dickey Fuller.
library(lmtest)
library(MASS)
library(survival)
library(fitdistrplus)
library(rriskDistributions)
library(car)
# Manejo del directorio
getwd()
directorio <- "C:/Users/windows/Documents/GitHub/Problem_Set_1/Proyecto-de-grado-IIND/Proyecto de grado IIND/1. Datos"
setwd(directorio)
# Chequeo de los archivos del directorio
dir()
list.files()
## Importacion de los datos ------------------
install_formats() # Cuestiones de importacion de archivos del paquete rio
data <- import("6. Bogota_Promedio_Dias_Act_VAR_1.xlsx")
# -----------------------------------------------------------
# Sección 2: Comportamiento de la variable PM25
# -----------------------------------------------------------
# Histograma de PM2.5
ggplot(data, aes(x = pm25)) +
geom_histogram(binwidth = 5, fill = "blue", color = "black") +
labs(title = "Histograma de PM2.5",
x = "Concentración de PM2.5 (μg/m3)") +
# Un tema minimalista
theme_minimal() +
# Alineación del título
theme(plot.title = element_text(hjust = 0.5))
# vector variable pm2021
pm25 <- data$pm25
ajusteR <- fitdist(pm25, "gamma")
resultadoR<- gofstat(ajusteR)
resultadoR$chisqpvalue
plot(ajusteR)
fit.cont(pm25)
# Transformar la variable pm25 a una distribución Normal
boxcox(pm25 ~ 1, data = data, lambda = seq(-2, 2, by = 0.1))
data$pm25_norm <- bcPower(data$pm25, lambda = 0.3)
# vector variable pm25
pm25_norm <- data$pm25_norm
fit.cont(pm25_norm)
# -----------------------------------------------------------
# Sección 3: Comportamiento de la variable tmp
# -----------------------------------------------------------
ggplot(data, aes(x = tmp)) +
geom_histogram(binwidth = 5, fill = "blue", color = "black") +
labs(title = "Histograma de tmp",
x = "Temperatura en grados Celsius") +
# Un tema minimalista
theme_minimal() +
# Alineación del título
theme(plot.title = element_text(hjust = 0.5))
# vector variable pm2021
tmp <- data$tmp
ajusteR <- fitdist(tmp, "gamma")
resultadoR<- gofstat(ajusteR)
resultadoR$chisqpvalue
plot(ajusteR)
fit.cont(tmp)
# Transformar la variable tmp a una distribución normal
data$ln_tmp <- log(data$tmp)
# vector variable tmp
ln_tmp <- data$ln_tmp
fit.cont(ln_tmp)
# -----------------------------------------------------------
# Sección 4: Comportamiento de la variable radsolar
# -----------------------------------------------------------
ggplot(data, aes(x = radsolar)) +
geom_histogram(binwidth = 5, fill = "blue", color = "black") +
labs(title = "Histograma de radsolar",
x = "radsolar en (W/M²)") +
# Un tema minimalista
theme_minimal() +
# Alineación del título
theme(plot.title = element_text(hjust = 0.5))
# vector variable pm2021
radsolar <- data$radsolar
ajusteR <- fitdist(radsolar, "norm")
resultadoR<- gofstat(ajusteR)
resultadoR$chisqpvalue
plot(ajusteR)
fit.cont(radsolar)
# radsolar tiene una distribución normal
# -----------------------------------------------------------
# Sección 5: Comportamiento de la variable pressure
# -----------------------------------------------------------
pressure <- data$pressure
hist(pressure)
ajusteR <- fitdist(pressure, "norm")
resultadoR<- gofstat(ajusteR)
resultadoR$chisqpvalue
plot(ajusteR)
fit.cont(pressure)
# pressure tiene una distribución normal
# -----------------------------------------------------------
# Sección 5: Comportamiento de la variable ws
# -----------------------------------------------------------
# vector variable pm2021
ws <- data$ws
hist(ws)
ajusteR <- fitdist(ws, "norm")
resultadoR<- gofstat(ajusteR)
resultadoR$chisqpvalue
plot(ajusteR)
fit.cont(ws)
# ws tiene una distribución normal
# Transformar la variable tmp a una distribución normal
data$ln_ws <- log(data$ws)
# vector variable tmp
ln_ws <- data$ln_ws
fit.cont(ln_ws)
# Exprtar data
write_xlsx(data, "C:/Users/windows/Documents/GitHub/Problem_Set_1/Proyecto-de-grado-IIND/Proyecto de grado IIND/1. Datos/7. Bogota_Promedio_Dias_Act_VECM.xlsx. Bogota_Promedio_Dias.xlsx")
# Exprtar data
write_xlsx(data, "C:/Users/windows/Documents/GitHub/Problem_Set_1/Proyecto-de-grado-IIND/Proyecto de grado IIND/1. Datos/7. Bogota_Promedio_Dias_Act_VECM.xlsx. Bogota_Promedio_Dias.xlsx")
